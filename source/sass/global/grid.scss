@import '../global/mixins.scss';
@import '../global/breakpoints.scss';

/********************************************
 ðŸ§© Bone Market â€” Responsive Grid Helpers
 Requires: _breakpoints.scss (bp vars + mixins)
********************************************/

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   Container
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
.container {
  width: clamp(0px, calc(100% - 2rem), 1200px);
  margin-inline: auto;

  @include up($bp-md) { width: clamp(0px, calc(100% - 4rem), 1200px); }
  @include up($bp-lg) { width: clamp(0px, calc(100% - 6rem), 1320px); }
  @include up($bp-xl) { width: clamp(0px, calc(100% - 8rem), 1440px); }
}


/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   Core grid + utilities
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
.grid {
  display: grid;
  align-items: start;
}

/* gaps (use as needed; expand if you want) */
.gap-0   { gap: 0; }
.gap-2   { gap: .125rem; }
.gap-4   { gap: .25rem; }
.gap-6   { gap: .375rem; }
.gap-8   { gap: .5rem; }
.gap-12  { gap: .75rem; }
.gap-16  { gap: 1rem; }
.gap-24  { gap: 1.5rem; }
.gap-32  { gap: 2rem; }

/* auto-fit fluid tracks */
.grid-fit-xs { grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
.grid-fit-sm { grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
.grid-fit-md { grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); }

/* fixed column counts (mobile-first) */
.grid-cols-1  { grid-template-columns: repeat(1, 1fr); }
.grid-cols-2  { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3  { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4  { grid-template-columns: repeat(4, 1fr); }
.grid-cols-6  { grid-template-columns: repeat(6, 1fr); }
.grid-cols-12 { grid-template-columns: repeat(12, 1fr); }

/* spanning across a 12-col grid */
@for $i from 1 through 12 {
  .span-#{$i} { grid-column: span #{$i} / span #{$i}; }
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   Responsive variants generator
   Usage classes:
   .sm:grid-cols-2 .md:grid-cols-4 .lg:span-6
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
$variants: (
  sm: $bp-sm,
  md: $bp-md,
  lg: $bp-lg,
  xl: $bp-xl
);

@each $name, $bp in $variants {
  @include up($bp) {
    .#{$name}\:grid-cols-1  { grid-template-columns: repeat(1, 1fr); }
    .#{$name}\:grid-cols-2  { grid-template-columns: repeat(2, 1fr); }
    .#{$name}\:grid-cols-3  { grid-template-columns: repeat(3, 1fr); }
    .#{$name}\:grid-cols-4  { grid-template-columns: repeat(4, 1fr); }
    .#{$name}\:grid-cols-6  { grid-template-columns: repeat(6, 1fr); }
    .#{$name}\:grid-cols-12 { grid-template-columns: repeat(12, 1fr); }

    @for $i from 1 through 12 {
      .#{$name}\:span-#{$i} { grid-column: span #{$i} / span #{$i}; }
    }

    .#{$name}\:gap-8  { gap: .5rem; }
    .#{$name}\:gap-16 { gap: 1rem; }
    .#{$name}\:gap-24 { gap: 1.5rem; }
    .#{$name}\:gap-32 { gap: 2rem; }
    .#{$name}\:grid-fit-xs { grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
    .#{$name}\:grid-fit-sm { grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
    .#{$name}\:grid-fit-md { grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); }
  }
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   Flex patterns (helpers)
   - .stack: vertical rhythm with gap, responsive switch
   - .cluster: wrap row with gap and centered baseline
   - .switcher: 1->2 columns when space allows
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
.stack {
  display: flex; flex-direction: column; gap: 1rem;
  &.tight { gap: .5rem; }
  &.loose { gap: 1.5rem; }
}

.cluster {
  display: flex; flex-wrap: wrap; gap: .75rem 1rem;
  align-items: center;
  &.left   { justify-content: flex-start; }
  &.center { justify-content: center; }
  &.right  { justify-content: flex-end; }
}

/* switcher: auto two columns when wide enough */
.switcher {
  --switch-min: 22rem; /* tweak threshold */
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem;

  @media (min-width: calc(var(--switch-min) * 2 + 1rem)) {
    grid-template-columns: 1fr 1fr;
    align-items: start;
  }
}

/* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
   Helpful sugar classes
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
.full-bleed { width: 100vw; margin-left: 50%; transform: translateX(-50%); }
.center     { margin-inline: auto; }
.max-w-prose{ max-width: 70ch; }

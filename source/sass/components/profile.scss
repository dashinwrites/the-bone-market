@import '../global/mixins.scss';

/*******************************
    Profile (Plate aesthetic)
********************************/

$h-underline-w: var(--h-underline-w, 40%);  // underline width
$h-cap-w:       8px;                         // cap length
$h-cap-h:       2px;                         // cap thickness
$h-cap-alpha:   .35;                         // cap opacity

/* ----- Plate frame on the entire profile wrapper ----- */
.bm-profile {
  position: relative;
  display: flex;
  flex-direction: column;
  block-size: calc(100vh - var(--nav-h, 56px));
  min-block-size: 0;
  background: var(--bg-1-rgb);
  border-radius: 8px;
  box-shadow: var(--plate-shadow);
  overflow: visible;

  /* corner ticks */
  @include corner-ticks(.55rem, 14px, 2px, .18);
}

/* ----- Tabs (top) ----- */
.bm-tabs {
  position: sticky;
  display: flex; flex-wrap: wrap; gap: .5rem;
  align-items: end; padding: .5rem 1rem;
  inset-block-start: var(--nav-h, 56px);
  background: var(--bg-2);
  border: var(--plate-border);
  border-radius: 8px 8px 0 0;
  box-shadow: var(--plate-shadow);
  z-index: 5; 
}

.bm-tab {
  appearance: none;
  background: transparent;
  border: 0;
  padding: .6rem .8rem;
  font: 500 .95rem/1 var(--font-hand);
  color: var(--text-medCon);
  border-radius: 6px;
  cursor: pointer;
  position: relative;

  &:hover {
    background: color-mix(in srgb, var(--bg-3) 60%, transparent);
    color: var(--text-clear);
    &::before { border-color: color-mix(in srgb, var(--text-loCon) 25%, transparent); }
  }

  &[aria-selected="true"], &.is-active {
    color: var(--text-clear);
    &::before { border-color: color-mix(in srgb, var(--accent-1) 45%, transparent); }
  }
}

/* active underline bar */
.bm-tab__active-bar {
  position: absolute;
  inset-block-end: 0;
  block-size: 2px;
  inline-size: 0;
  border-radius: 2px;
  background: var(--accent-1);
  transition: transform 260ms cubic-bezier(.22,.61,.36,1), inline-size 260ms;
}

/* ----- Panels container ----- */
.bm-panels {
  position: relative;
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  min-block-size: 0;
  background: var(--bg-1-rgb);
  border: var(--plate-border);
  border-top: 0;
  border-radius: 0 0 8px 8px;
  overflow: auto;
}

.bm-panel { 
  display: none; 
  flex: 1 1 auto;
  block-size: 100%;
  min-block-size: 0;

  &:not([hidden]) {
    display: flex;
    flex-direction: column;
  }
}

/* ----- Cover (with plate edging over the image) ----- */
.bm-cover {
  flex: 1 1 auto;
  position: relative;
  display: grid;
  grid-template-rows: 1fr;
  block-size: 100%;
  min-block-size: 0;
}

.bm-cover__image {
  position: absolute; inset: 0; margin: 0; pointer-events: none;
  img {
    width: 100%; height: 100%;
    object-fit: cover; display: block;
    filter: saturate(.9) contrast(1.03);
    opacity: var(--cover-bg-opacity);
    mix-blend-mode: var(--cover-bg-blend);
  }
  /* vignette for readability */
  &::after {
    content: "";
    position: absolute; inset: 0;
    background:
      linear-gradient(to top, rgba(0,0,0,.45), transparent 40%),
      linear-gradient(to bottom, rgba(0,0,0,.35), transparent 35%);
  }
}

.bm-cover__portrait {
  position: absolute;
  /* top & bottom insets and right edge anchor */
  inset-block: var(--portrait-offset) var(--portrait-offset);
  inset-inline-end: var(--portrait-offset);

  z-index: 3;
  display: grid;
  align-items: end;

  block-size: calc(100% - (var(--portrait-offset) * 2));
  /* ...but cap it by your percentage max */
  max-block-size: var(--portrait-max-h);
  /* Width derived from aspect; cap it so it's not gigantic on ultra-wide */
  aspect-ratio: var(--portrait-aspect);
  inline-size: auto;
  max-inline-size: var(--portrait-max-w);

  border-radius: 8px;
  box-shadow:
    0 12px 30px rgba(0,0,0,.35),
    inset 0 0 0 1px color-mix(in srgb, var(--text-loCon) 12%, transparent);
  background: color-mix(in srgb, var(--bg-2) 45%, transparent);
  overflow: hidden;

  img {
    width: 100%;
    height: 100%;
    display: block;
    object-fit: cover;
  }

  &::after {
    content: "";
    position: absolute;
    inset: .5rem;
    border: var(--bdash);
    opacity: .22;
    border-radius: 6px;
    pointer-events: none;
  }
}

.bm-cover__overlay {
  position: relative;
  z-index: 2;
  display: grid;
  gap: 1rem;
  align-content: start;
  padding-block-start: var(--overlay-top);
  padding-inline-start: var(--overlay-left);
  padding-inline-end: calc(var(--portrait-offset) + var(--portrait-max-w));
  color: #fff;

  /* small label plate behind the name */
  .bm-cover__name {
    margin: 0;
    font-family: var(--font-serif);
    font-size: clamp(2rem, 6vw, 3.4rem);
    letter-spacing: 0.25rem;
    line-height: 1.05;
    text-shadow: 0 2px 12px rgba(0,0,0,.5);
    position: relative;
    display: inline-block;
    padding-inline: .35rem;

    &::after {
      content: "";
      position: absolute;
      inset-inline: -.35rem;
      inset-block-end: -.25rem;
      inline-size: 100%;
      block-size: 2px;
      background: color-mix(in srgb, #fff 50%, transparent);
      opacity: .5;
    }

    .bm-cover__alias {
      display: block;
      font-style: italic;
      font-weight: 400;
      font-size: clamp(1rem, 2.2vw, 1.2rem);
      color: color-mix(in srgb, #fff 80%, var(--accent-1));
      margin-top: .25rem;
      margin-left: 2rem;
      letter-spacing: .02em;
    }
  }
}

.bm-cover__links {
  display: flex; gap: .5rem; flex-wrap: wrap;

  .chip {
    text-decoration: none;
    padding: 0.25rem;
    color: var(--link);
    text-decoration: none;
    line-height: 1;
    transition: var(--transi-quick);

    &:focus-visible { outline: none; box-shadow: inset 0 0 0 2px var(--accent-3); transition: var(--transi-quick); }

    &:hover { background: color-mix(in srgb, var(--bg) 95%, transparent); 
      color: var(--accent-1); text-decoration: underline; }

  &:not(:first-child)::before {
    content: "â€ ";
    display: inline-block;
    margin-right: 1rem;
    opacity: 0.85;
    color: var(--link-sep);
  }

  
  }
}

.bm-cover__tw {
  max-inline-size: 64ch;
  padding: .8rem 1rem;
  border-radius: 6px;
  background: rgba(0,0,0,.45);
  border: var(--border-1);
  backdrop-filter: blur(2px);
  margin: 4rem auto 0;

  strong {
    display: block;
    font: 700 .9rem/1 var(--font-hand);
    color: var(--accent-1);
    text-transform: uppercase;
    margin-bottom: .35rem;
    letter-spacing: .15em;
    text-align: center;
  }

  p { 
    margin: 0; 
    padding-left: 1.1rem; 
    text-align: justify;
  }
}

/* ----- Blocks / grids / utilities ----- */
.bm-block {
  position: relative;
  background: var(--bg-1-rgb);
  border: 0;
  border-radius: 6px;
  padding: .9rem 1rem;
  box-shadow:
    inset 0 0 0 1px color-mix(in srgb, var(--text-loCon) 12%, transparent),
    0 6px 16px rgba(0,0,0,.06);

}

.bm-h {
  position: relative;
  padding-block-end: .35rem;
  font-family: var(--font-serif);
  font-size: 1rem;
  letter-spacing: .05em;
  text-transform: lowercase;
  color: var(--text-clear);
  margin: 0 0 .5rem;

  &::after {
    content: "";
    position: absolute;
    inset-inline-start: 0;
    inset-block-end: 0;
    inline-size: var(--h-underline-w, 42%); /* width knob */
    border-bottom: var(--bdash);
    opacity: var(--h-underline-alpha, .35); /* strength knob */
    pointer-events: none;
  }

  &.is-centered {
    text-align: center;
    &::after {
      inset-inline-start: 50%;
      transform: translateX(-50%);
    }
  }

  &.has-caps {
    /* keep the dashed underline from your base .bm-h::after rule */
    &::after { inline-size: $h-underline-w; }

    /* left cap */
    &::before {
      content: "";
      position: absolute;
      inset-block-end: 0;
      inset-inline-start: 0;
      inline-size: $h-cap-w;
      block-size: $h-cap-h;
      background: currentColor;
      opacity: $h-cap-alpha;
    }

    /* right cap element (markup: <span class="hcap" aria-hidden="true"></span>) */
    > .hcap {
      position: absolute;
      inset-block-end: 0;
      inline-size: $h-cap-w;
      block-size: $h-cap-h;
      background: currentColor;
      opacity: $h-cap-alpha;
      inset-inline-start: calc(#{$h-underline-w});
      transform: translateX(-100%);
    }
  }
}

.stack { margin: 0; padding: 0; list-style: none; display: grid; gap: .25rem; }
.tick  { margin: 0; padding-left: 1.2rem; li { margin: .25rem 0; text-align:justify; } }
.rel   { margin: 0; padding: 0; list-style: none; display: grid; gap: .4rem; }

.tag {
  font: 700 11px/1 var(--font-sans);
  padding: .25rem .4rem;
  border-radius: 4px;
  background: var(--bg-3);
  color: var(--text-clear);
  border: 0;
}
.tag--lover { background: color-mix(in srgb, var(--accent-1) 35%, var(--bg-3)); }
.tag--rival { background: color-mix(in srgb, var(--warn)     35%, var(--bg-3)); }
.tag--kin   { background: color-mix(in srgb, var(--accent-2) 35%, var(--bg-3)); }

.grid-2 { display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; }
.grid-3 { display: grid; grid-template-columns: repeat(3, 1fr); gap: 1rem; }

.mood-grid {
  display: grid;
  grid-template-columns: repeat(6, minmax(120px, 1fr));
  gap: .5rem;
  img { width: 100%; aspect-ratio: 1/1; object-fit: cover; border-radius: 6px; }
}

/* ----- Nested tabs (Plotting) ----- */
.bm-subtabs {
  position: relative;
  display: flex; gap: .5rem; padding: .6rem 1rem .4rem;
  border-bottom: 1px solid color-mix(in srgb, var(--text-loCon) 16%, transparent);
}
.bm-subtab {
  appearance: none; background: transparent; border: 0; cursor: pointer;
  padding: .5rem .7rem; border-radius: 6px; color: var(--text-medCon);
  font: 600 .9rem/1 var(--font-sans);
  position: relative;

  &::before {
    content: "";
    position: absolute; inset: 0;
    border: 1px dashed transparent;
    border-radius: 6px;
    transition: border-color 160ms ease;
  }

  &:hover {
    background: color-mix(in srgb, var(--bg-3) 60%, transparent);
    color: var(--text-clear);
    &::before { border-color: color-mix(in srgb, var(--text-loCon) 25%, transparent); }
  }
  &[aria-selected="true"], &.is-active {
    color: var(--text-clear);
    &::before { border-color: color-mix(in srgb, var(--accent-2) 45%, transparent); }
  }
}

.bm-subtab__active-bar {
  position: absolute; inset-block-end: 0;
  block-size: 2px; inline-size: 0;
  border-radius: 2px; background: var(--accent-2);
  transition: transform 220ms cubic-bezier(.22,.61,.36,1), inline-size 220ms;
}

.bm-subpanels { padding: 1rem; }
.bm-subpanel[hidden] { display: none; }

/* ----- Responsive ----- */
@media (max-width: 900px) {
  .grid-2, .grid-3 { grid-template-columns: 1fr; }
  .mood-grid { grid-template-columns: repeat(3, 1fr); }
}

@media (max-width: 720px) {
  .bm-tabs { position: static; }
  .bm-profile { block-size: auto; }  /* fall back to normal flow on small screens */
  .bm-panels { overflow: visible; }
}

@media (max-width: 900px) {
  .bm-cover__portrait {
    position: static;
    margin: var(--portrait-offset) auto 0;
    inline-size: clamp(0px, 60vw, 380px);
    aspect-ratio: var(--portrait-aspect);
  }
  .bm-cover__overlay {
    padding-inline-end: clamp(1rem, 4vw, 2rem);
    padding-inline-start: clamp(12px, 4vw, 20px);
  }
}
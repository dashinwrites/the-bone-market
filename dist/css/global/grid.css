@charset "UTF-8";
/* =========================================
   Plate Button Mixin (theme-toggle style)
   ========================================= */
/* Optional: current/active state helper */
/* Optional: tooltip pulled from a data attribute (e.g., data-label) */
/* ================================================
   Plate-button look for cover tokens
   ================================================ */
/* Reusable mixin (oval by default) */
/* Optional: respect prefers-reduced-motion on anything you include this on */
/* Gradient underline mixin */
/* =========================================
   Plate Button Mixin (theme-toggle style)
   ========================================= */
/* Optional: current/active state helper */
/* Optional: tooltip pulled from a data attribute (e.g., data-label) */
/* ================================================
   Plate-button look for cover tokens
   ================================================ */
/* Reusable mixin (oval by default) */
/* Optional: respect prefers-reduced-motion on anything you include this on */
/* Gradient underline mixin */
/***************************************
 📐 Bone Market — Responsive Breakpoints
 Lightweight, semantic, SCSS-based
***************************************/
/* ────────────────────────────────
   Base Variables
──────────────────────────────── */
/* ────────────────────────────────
   Media Query Mixins
──────────────────────────────── */
/* Max-width — common "down" breakpoints */
/* Min-width — common "up" breakpoints */
/* Between two sizes */
/* Orientation helpers */
/* Motion-safe helper (for animations/transitions) */
/* Motion-reduce helper */
/* Example usage:
───────────────────────────────────────
@include down($bp-sm) {
  .category { width: 95%; }
}

@include up($bp-lg) {
  .plate-info__staff img { width: 120px; }
}

@include between($bp-sm, $bp-lg) {
  .leftbar { display: none; }
}

@include portrait {
  .header-bg { background-position: center top; }
}
*/
/* ────────────────────────────────
   Optional Semantic Shortcuts
──────────────────────────────── */
/********************************************
 Bone Market — Responsive Grid Helpers
 Requires: _breakpoints.scss (bp vars + mixins)
********************************************/
/* ───────────────────────────
   Container
─────────────────────────── */
.container {
  width: clamp(0px, calc(100% - 2rem), 1200px);
  margin-inline: auto; }
  @media (min-width: 1024px) {
    .container {
      width: clamp(0px, calc(100% - 4rem), 1200px); } }
  @media (min-width: 1280px) {
    .container {
      width: clamp(0px, calc(100% - 6rem), 1320px); } }
  @media (min-width: 1600px) {
    .container {
      width: clamp(0px, calc(100% - 8rem), 1440px); } }

/* ───────────────────────────
   Core grid + utilities
─────────────────────────── */
.grid {
  display: grid;
  align-items: start; }

/* gaps (use as needed; expand if you want) */
.gap-0 {
  gap: 0; }

.gap-2 {
  gap: .125rem; }

.gap-4 {
  gap: .25rem; }

.gap-6 {
  gap: .375rem; }

.gap-8 {
  gap: .5rem; }

.gap-12 {
  gap: .75rem; }

.gap-16 {
  gap: 1rem; }

.gap-24 {
  gap: 1.5rem; }

.gap-32 {
  gap: 2rem; }

/* auto-fit fluid tracks */
.grid-fit-xs {
  grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }

.grid-fit-sm {
  grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }

.grid-fit-md {
  grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); }

/* fixed column counts (mobile-first) */
.grid-cols-1 {
  grid-template-columns: repeat(1, 1fr); }

.grid-cols-2 {
  grid-template-columns: repeat(2, 1fr); }

.grid-cols-3 {
  grid-template-columns: repeat(3, 1fr); }

.grid-cols-4 {
  grid-template-columns: repeat(4, 1fr); }

.grid-cols-6 {
  grid-template-columns: repeat(6, 1fr); }

.grid-cols-12 {
  grid-template-columns: repeat(12, 1fr); }

/* spanning across a 12-col grid */
.span-1 {
  grid-column: span 1 / span 1; }

.span-2 {
  grid-column: span 2 / span 2; }

.span-3 {
  grid-column: span 3 / span 3; }

.span-4 {
  grid-column: span 4 / span 4; }

.span-5 {
  grid-column: span 5 / span 5; }

.span-6 {
  grid-column: span 6 / span 6; }

.span-7 {
  grid-column: span 7 / span 7; }

.span-8 {
  grid-column: span 8 / span 8; }

.span-9 {
  grid-column: span 9 / span 9; }

.span-10 {
  grid-column: span 10 / span 10; }

.span-11 {
  grid-column: span 11 / span 11; }

.span-12 {
  grid-column: span 12 / span 12; }

/* ───────────────────────────
   Responsive variants generator
   Usage classes:
   .sm:grid-cols-2 .md:grid-cols-4 .lg:span-6
─────────────────────────── */
@media (min-width: 768px) {
  .sm\:grid-cols-1 {
    grid-template-columns: repeat(1, 1fr); }
  .sm\:grid-cols-2 {
    grid-template-columns: repeat(2, 1fr); }
  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, 1fr); }
  .sm\:grid-cols-4 {
    grid-template-columns: repeat(4, 1fr); }
  .sm\:grid-cols-6 {
    grid-template-columns: repeat(6, 1fr); }
  .sm\:grid-cols-12 {
    grid-template-columns: repeat(12, 1fr); }
  .sm\:span-1 {
    grid-column: span 1 / span 1; }
  .sm\:span-2 {
    grid-column: span 2 / span 2; }
  .sm\:span-3 {
    grid-column: span 3 / span 3; }
  .sm\:span-4 {
    grid-column: span 4 / span 4; }
  .sm\:span-5 {
    grid-column: span 5 / span 5; }
  .sm\:span-6 {
    grid-column: span 6 / span 6; }
  .sm\:span-7 {
    grid-column: span 7 / span 7; }
  .sm\:span-8 {
    grid-column: span 8 / span 8; }
  .sm\:span-9 {
    grid-column: span 9 / span 9; }
  .sm\:span-10 {
    grid-column: span 10 / span 10; }
  .sm\:span-11 {
    grid-column: span 11 / span 11; }
  .sm\:span-12 {
    grid-column: span 12 / span 12; }
  .sm\:gap-8 {
    gap: .5rem; }
  .sm\:gap-16 {
    gap: 1rem; }
  .sm\:gap-24 {
    gap: 1.5rem; }
  .sm\:gap-32 {
    gap: 2rem; }
  .sm\:grid-fit-xs {
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
  .sm\:grid-fit-sm {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
  .sm\:grid-fit-md {
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); } }

@media (min-width: 1024px) {
  .md\:grid-cols-1 {
    grid-template-columns: repeat(1, 1fr); }
  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, 1fr); }
  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, 1fr); }
  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, 1fr); }
  .md\:grid-cols-6 {
    grid-template-columns: repeat(6, 1fr); }
  .md\:grid-cols-12 {
    grid-template-columns: repeat(12, 1fr); }
  .md\:span-1 {
    grid-column: span 1 / span 1; }
  .md\:span-2 {
    grid-column: span 2 / span 2; }
  .md\:span-3 {
    grid-column: span 3 / span 3; }
  .md\:span-4 {
    grid-column: span 4 / span 4; }
  .md\:span-5 {
    grid-column: span 5 / span 5; }
  .md\:span-6 {
    grid-column: span 6 / span 6; }
  .md\:span-7 {
    grid-column: span 7 / span 7; }
  .md\:span-8 {
    grid-column: span 8 / span 8; }
  .md\:span-9 {
    grid-column: span 9 / span 9; }
  .md\:span-10 {
    grid-column: span 10 / span 10; }
  .md\:span-11 {
    grid-column: span 11 / span 11; }
  .md\:span-12 {
    grid-column: span 12 / span 12; }
  .md\:gap-8 {
    gap: .5rem; }
  .md\:gap-16 {
    gap: 1rem; }
  .md\:gap-24 {
    gap: 1.5rem; }
  .md\:gap-32 {
    gap: 2rem; }
  .md\:grid-fit-xs {
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
  .md\:grid-fit-sm {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
  .md\:grid-fit-md {
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); } }

@media (min-width: 1280px) {
  .lg\:grid-cols-1 {
    grid-template-columns: repeat(1, 1fr); }
  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, 1fr); }
  .lg\:grid-cols-3 {
    grid-template-columns: repeat(3, 1fr); }
  .lg\:grid-cols-4 {
    grid-template-columns: repeat(4, 1fr); }
  .lg\:grid-cols-6 {
    grid-template-columns: repeat(6, 1fr); }
  .lg\:grid-cols-12 {
    grid-template-columns: repeat(12, 1fr); }
  .lg\:span-1 {
    grid-column: span 1 / span 1; }
  .lg\:span-2 {
    grid-column: span 2 / span 2; }
  .lg\:span-3 {
    grid-column: span 3 / span 3; }
  .lg\:span-4 {
    grid-column: span 4 / span 4; }
  .lg\:span-5 {
    grid-column: span 5 / span 5; }
  .lg\:span-6 {
    grid-column: span 6 / span 6; }
  .lg\:span-7 {
    grid-column: span 7 / span 7; }
  .lg\:span-8 {
    grid-column: span 8 / span 8; }
  .lg\:span-9 {
    grid-column: span 9 / span 9; }
  .lg\:span-10 {
    grid-column: span 10 / span 10; }
  .lg\:span-11 {
    grid-column: span 11 / span 11; }
  .lg\:span-12 {
    grid-column: span 12 / span 12; }
  .lg\:gap-8 {
    gap: .5rem; }
  .lg\:gap-16 {
    gap: 1rem; }
  .lg\:gap-24 {
    gap: 1.5rem; }
  .lg\:gap-32 {
    gap: 2rem; }
  .lg\:grid-fit-xs {
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
  .lg\:grid-fit-sm {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
  .lg\:grid-fit-md {
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); } }

@media (min-width: 1600px) {
  .xl\:grid-cols-1 {
    grid-template-columns: repeat(1, 1fr); }
  .xl\:grid-cols-2 {
    grid-template-columns: repeat(2, 1fr); }
  .xl\:grid-cols-3 {
    grid-template-columns: repeat(3, 1fr); }
  .xl\:grid-cols-4 {
    grid-template-columns: repeat(4, 1fr); }
  .xl\:grid-cols-6 {
    grid-template-columns: repeat(6, 1fr); }
  .xl\:grid-cols-12 {
    grid-template-columns: repeat(12, 1fr); }
  .xl\:span-1 {
    grid-column: span 1 / span 1; }
  .xl\:span-2 {
    grid-column: span 2 / span 2; }
  .xl\:span-3 {
    grid-column: span 3 / span 3; }
  .xl\:span-4 {
    grid-column: span 4 / span 4; }
  .xl\:span-5 {
    grid-column: span 5 / span 5; }
  .xl\:span-6 {
    grid-column: span 6 / span 6; }
  .xl\:span-7 {
    grid-column: span 7 / span 7; }
  .xl\:span-8 {
    grid-column: span 8 / span 8; }
  .xl\:span-9 {
    grid-column: span 9 / span 9; }
  .xl\:span-10 {
    grid-column: span 10 / span 10; }
  .xl\:span-11 {
    grid-column: span 11 / span 11; }
  .xl\:span-12 {
    grid-column: span 12 / span 12; }
  .xl\:gap-8 {
    gap: .5rem; }
  .xl\:gap-16 {
    gap: 1rem; }
  .xl\:gap-24 {
    gap: 1.5rem; }
  .xl\:gap-32 {
    gap: 2rem; }
  .xl\:grid-fit-xs {
    grid-template-columns: repeat(auto-fit, minmax(12rem, 1fr)); }
  .xl\:grid-fit-sm {
    grid-template-columns: repeat(auto-fit, minmax(16rem, 1fr)); }
  .xl\:grid-fit-md {
    grid-template-columns: repeat(auto-fit, minmax(20rem, 1fr)); } }

/* ───────────────────────────
   Flex patterns (helpers)
   - .stack: vertical rhythm with gap, responsive switch
   - .cluster: wrap row with gap and centered baseline
   - .switcher: 1->2 columns when space allows
─────────────────────────── */
.stack {
  display: flex;
  flex-direction: column;
  gap: 1rem; }
  .stack.tight {
    gap: .5rem; }
  .stack.loose {
    gap: 1.5rem; }

.cluster {
  display: flex;
  flex-wrap: wrap;
  gap: .75rem 1rem;
  align-items: center; }
  .cluster.left {
    justify-content: flex-start; }
  .cluster.center {
    justify-content: center; }
  .cluster.right {
    justify-content: flex-end; }

/* switcher: auto two columns when wide enough */
.switcher {
  --switch-min: 22rem;
  /* tweak threshold */
  display: grid;
  grid-template-columns: 1fr;
  gap: 1rem; }
  @media (min-width: calc(var(--switch-min) * 2 + 1rem)) {
    .switcher {
      grid-template-columns: 1fr 1fr;
      align-items: start; } }

/* ───────────────────────────
   Helpful sugar classes
─────────────────────────── */
.center {
  margin-inline: auto; }

.max-w-prose {
  max-width: 70ch; }
